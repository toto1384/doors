/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TermsOfServiceIndexRouteImport } from './routes/terms-of-service/index'
import { Route as PrivacyPolicyIndexRouteImport } from './routes/privacy-policy/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AuthResetPasswordIndexRouteImport } from './routes/auth/reset-password/index'
import { Route as AuthForgotPasswordIndexRouteImport } from './routes/auth/forgot-password/index'
import { Route as AuthPathIndexRouteImport } from './routes/auth/$path/index'
import { Route as AppPropertiesIndexRouteImport } from './routes/app/properties/index'
import { Route as AppProfileIndexRouteImport } from './routes/app/profile/index'
import { Route as AppNotificationsIndexRouteImport } from './routes/app/notifications/index'
import { Route as AppBillingIndexRouteImport } from './routes/app/billing/index'
import { Route as AppPropertiesAddRouteImport } from './routes/app/properties/add'
import { Route as AppPropertiesIdRouteImport } from './routes/app/properties/$id'
import { Route as AppProfileSettingsRouteImport } from './routes/app/profile/settings'
import { ServerRoute as ApiUploadthingServerRouteImport } from './routes/api/uploadthing'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api/trpc/$'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsOfServiceIndexRoute = TermsOfServiceIndexRouteImport.update({
  id: '/terms-of-service/',
  path: '/terms-of-service/',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyPolicyIndexRoute = PrivacyPolicyIndexRouteImport.update({
  id: '/privacy-policy/',
  path: '/privacy-policy/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordIndexRoute = AuthResetPasswordIndexRouteImport.update({
  id: '/auth/reset-password/',
  path: '/auth/reset-password/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexRouteImport.update({
  id: '/auth/forgot-password/',
  path: '/auth/forgot-password/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthPathIndexRoute = AuthPathIndexRouteImport.update({
  id: '/auth/$path/',
  path: '/auth/$path/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppPropertiesIndexRoute = AppPropertiesIndexRouteImport.update({
  id: '/app/properties/',
  path: '/app/properties/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppProfileIndexRoute = AppProfileIndexRouteImport.update({
  id: '/app/profile/',
  path: '/app/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppNotificationsIndexRoute = AppNotificationsIndexRouteImport.update({
  id: '/app/notifications/',
  path: '/app/notifications/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppBillingIndexRoute = AppBillingIndexRouteImport.update({
  id: '/app/billing/',
  path: '/app/billing/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppPropertiesAddRoute = AppPropertiesAddRouteImport.update({
  id: '/app/properties/add',
  path: '/app/properties/add',
  getParentRoute: () => rootRouteImport,
} as any)
const AppPropertiesIdRoute = AppPropertiesIdRouteImport.update({
  id: '/app/properties/$id',
  path: '/app/properties/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AppProfileSettingsRoute = AppProfileSettingsRouteImport.update({
  id: '/app/profile/settings',
  path: '/app/profile/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiUploadthingServerRoute = ApiUploadthingServerRouteImport.update({
  id: '/api/uploadthing',
  path: '/api/uploadthing',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppIndexRoute
  '/privacy-policy': typeof PrivacyPolicyIndexRoute
  '/terms-of-service': typeof TermsOfServiceIndexRoute
  '/app/profile/settings': typeof AppProfileSettingsRoute
  '/app/properties/$id': typeof AppPropertiesIdRoute
  '/app/properties/add': typeof AppPropertiesAddRoute
  '/app/billing': typeof AppBillingIndexRoute
  '/app/notifications': typeof AppNotificationsIndexRoute
  '/app/profile': typeof AppProfileIndexRoute
  '/app/properties': typeof AppPropertiesIndexRoute
  '/auth/$path': typeof AuthPathIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppIndexRoute
  '/privacy-policy': typeof PrivacyPolicyIndexRoute
  '/terms-of-service': typeof TermsOfServiceIndexRoute
  '/app/profile/settings': typeof AppProfileSettingsRoute
  '/app/properties/$id': typeof AppPropertiesIdRoute
  '/app/properties/add': typeof AppPropertiesAddRoute
  '/app/billing': typeof AppBillingIndexRoute
  '/app/notifications': typeof AppNotificationsIndexRoute
  '/app/profile': typeof AppProfileIndexRoute
  '/app/properties': typeof AppPropertiesIndexRoute
  '/auth/$path': typeof AuthPathIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app/': typeof AppIndexRoute
  '/privacy-policy/': typeof PrivacyPolicyIndexRoute
  '/terms-of-service/': typeof TermsOfServiceIndexRoute
  '/app/profile/settings': typeof AppProfileSettingsRoute
  '/app/properties/$id': typeof AppPropertiesIdRoute
  '/app/properties/add': typeof AppPropertiesAddRoute
  '/app/billing/': typeof AppBillingIndexRoute
  '/app/notifications/': typeof AppNotificationsIndexRoute
  '/app/profile/': typeof AppProfileIndexRoute
  '/app/properties/': typeof AppPropertiesIndexRoute
  '/auth/$path/': typeof AuthPathIndexRoute
  '/auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/auth/reset-password/': typeof AuthResetPasswordIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/app/profile/settings'
    | '/app/properties/$id'
    | '/app/properties/add'
    | '/app/billing'
    | '/app/notifications'
    | '/app/profile'
    | '/app/properties'
    | '/auth/$path'
    | '/auth/forgot-password'
    | '/auth/reset-password'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/app/profile/settings'
    | '/app/properties/$id'
    | '/app/properties/add'
    | '/app/billing'
    | '/app/notifications'
    | '/app/profile'
    | '/app/properties'
    | '/auth/$path'
    | '/auth/forgot-password'
    | '/auth/reset-password'
  id:
    | '__root__'
    | '/'
    | '/app/'
    | '/privacy-policy/'
    | '/terms-of-service/'
    | '/app/profile/settings'
    | '/app/properties/$id'
    | '/app/properties/add'
    | '/app/billing/'
    | '/app/notifications/'
    | '/app/profile/'
    | '/app/properties/'
    | '/auth/$path/'
    | '/auth/forgot-password/'
    | '/auth/reset-password/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppIndexRoute: typeof AppIndexRoute
  PrivacyPolicyIndexRoute: typeof PrivacyPolicyIndexRoute
  TermsOfServiceIndexRoute: typeof TermsOfServiceIndexRoute
  AppProfileSettingsRoute: typeof AppProfileSettingsRoute
  AppPropertiesIdRoute: typeof AppPropertiesIdRoute
  AppPropertiesAddRoute: typeof AppPropertiesAddRoute
  AppBillingIndexRoute: typeof AppBillingIndexRoute
  AppNotificationsIndexRoute: typeof AppNotificationsIndexRoute
  AppProfileIndexRoute: typeof AppProfileIndexRoute
  AppPropertiesIndexRoute: typeof AppPropertiesIndexRoute
  AuthPathIndexRoute: typeof AuthPathIndexRoute
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthResetPasswordIndexRoute: typeof AuthResetPasswordIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/uploadthing': typeof ApiUploadthingServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/uploadthing': typeof ApiUploadthingServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/uploadthing': typeof ApiUploadthingServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/uploadthing' | '/api/auth/$' | '/api/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/uploadthing' | '/api/auth/$' | '/api/trpc/$'
  id: '__root__' | '/api/uploadthing' | '/api/auth/$' | '/api/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiUploadthingServerRoute: typeof ApiUploadthingServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/terms-of-service/': {
      id: '/terms-of-service/'
      path: '/terms-of-service'
      fullPath: '/terms-of-service'
      preLoaderRoute: typeof TermsOfServiceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy-policy/': {
      id: '/privacy-policy/'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password/': {
      id: '/auth/reset-password/'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password/': {
      id: '/auth/forgot-password/'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/$path/': {
      id: '/auth/$path/'
      path: '/auth/$path'
      fullPath: '/auth/$path'
      preLoaderRoute: typeof AuthPathIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/properties/': {
      id: '/app/properties/'
      path: '/app/properties'
      fullPath: '/app/properties'
      preLoaderRoute: typeof AppPropertiesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/profile/': {
      id: '/app/profile/'
      path: '/app/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/notifications/': {
      id: '/app/notifications/'
      path: '/app/notifications'
      fullPath: '/app/notifications'
      preLoaderRoute: typeof AppNotificationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/billing/': {
      id: '/app/billing/'
      path: '/app/billing'
      fullPath: '/app/billing'
      preLoaderRoute: typeof AppBillingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/properties/add': {
      id: '/app/properties/add'
      path: '/app/properties/add'
      fullPath: '/app/properties/add'
      preLoaderRoute: typeof AppPropertiesAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/properties/$id': {
      id: '/app/properties/$id'
      path: '/app/properties/$id'
      fullPath: '/app/properties/$id'
      preLoaderRoute: typeof AppPropertiesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/profile/settings': {
      id: '/app/profile/settings'
      path: '/app/profile/settings'
      fullPath: '/app/profile/settings'
      preLoaderRoute: typeof AppProfileSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/uploadthing': {
      id: '/api/uploadthing'
      path: '/api/uploadthing'
      fullPath: '/api/uploadthing'
      preLoaderRoute: typeof ApiUploadthingServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppIndexRoute: AppIndexRoute,
  PrivacyPolicyIndexRoute: PrivacyPolicyIndexRoute,
  TermsOfServiceIndexRoute: TermsOfServiceIndexRoute,
  AppProfileSettingsRoute: AppProfileSettingsRoute,
  AppPropertiesIdRoute: AppPropertiesIdRoute,
  AppPropertiesAddRoute: AppPropertiesAddRoute,
  AppBillingIndexRoute: AppBillingIndexRoute,
  AppNotificationsIndexRoute: AppNotificationsIndexRoute,
  AppProfileIndexRoute: AppProfileIndexRoute,
  AppPropertiesIndexRoute: AppPropertiesIndexRoute,
  AuthPathIndexRoute: AuthPathIndexRoute,
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthResetPasswordIndexRoute: AuthResetPasswordIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiUploadthingServerRoute: ApiUploadthingServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
